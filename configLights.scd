p = SerialPort.new("/dev/cu.wchusbserial1410", 230400, crtscts: true);
p.close;

( // LEDBEAM
var end = [101, 110, 100];

var setup = [
	// [[0x7C,0xDF,0xA1,0x03,0x9A,0x47], 0x01, 0], // 0
	[[0x24, 0x6F,0x28,0xF2,0xB2,0x64], 0x01, 0], // New WROOM
	[[0x7C,0xDF,0xA1,0x03,0x9A,0x51], 0x01, 1], // 1
	[[0x7C,0xDF,0xA1,0x03,0x9A,0x55], 0x01, 2], // 2
	[[0x7C,0xDF,0xA1,0x03,0x9A,0x3F], 0x01, 3], // 3


	// [[0x00, 0x00, 0x00, 0x00, 0x00, 0x00], 0x02, 0], // 4
	// [[0x00, 0x00, 0x00, 0x00, 0x00, 0x00], 0x02, 1], // 5
	// [[0x00, 0x00, 0x00, 0x00, 0x00, 0x00], 0x02, 2], // 6
	// [[0x00, 0x00, 0x00, 0x00, 0x00, 0x00], 0x02, 3] // 7
];

{
	setup.do{
		|a|
		var addr = a[0];
		var channel = a[1];
		var id = a[2];
		p.putAll(addr ++ [0x04, channel] ++ end);
		0.1.wait;
		p.putAll(addr ++ [0x03, id] ++ end);
		0.1.wait;
	};
	"Update done".postln;
}.fork;
)

( // JONISK
var end = [101, 110, 100];

var setup = [
	[[0x24,0x6F,0x28,0xDD,0x47,0xFD], 0],
	[[0x24,0x6F,0x28,0xDD,0x48,0x8D], 1],
	[[0x24,0x6F,0x28,0xF1,0x9A,0xC1], 2],
	// [[0x24,0x6F,0x28,0xDD,0x48,0x15], 3],
	[[0x24,0x6F,0x28,0xF2,0x83,0x21], 3],
	[[0x24,0x6F,0x28,0xDD,0x47,0xF1], 4],
	[[0x24,0x6F,0x28,0xDD,0x47,0xD9], 5],
	[[0x24,0x6F,0x28,0xDD,0x47,0xDD], 6],
	[[0x24,0x6F,0x28,0xDD,0x48,0xA1], 7],
	[[0x24,0x6F,0x28,0xDD,0x48,0x51], 8],
	[[0x24,0x6F,0x28,0xDD,0x48,0xB1], 9],
	[[0x24,0x6F,0x28,0xDD,0x48,0x61], 10],
	[[0x24,0x6F,0x28,0xDD,0x48,0xBD], 11],
	[[0x24,0x6F,0x28,0xDD,0x01,0xB1], 12],
	// [[0x24,0x6F,0x28,0xDD,0x48,0x11], 13],
	[[0x24,0x6F,0x28,0xDC,0xC0,0x61], 14],
	// [[0xFF, 0xFF,0xFF, 0xFF,0xFF, 0xFF], 15],
	// [[0x7C,0xDF,0xA1,0x17,0x40,0xFD], 16],
	[[0x24,0x6F,0x28,0xF2,0x83,0x41], 15],


	// 24:6F:28:DD:48:15 BACKUP no 17


	[[0xE8,0x9F,0x6D,0xB9,0xF2,0xD9], 0], // 2022
	[[0x34,0x94,0x54,0x14,0xFF,0x59], 0]
];

{
	setup.do{
	|a|
		var addr = a[0];
		var id = a[1];
		p.putAll(addr ++ [0x03, id] ++ end);
		0.1.wait;
	};
	"Update done".postln;
}.fork
)

p.putAll((0xFF!6) ++ [0x09] ++ [101, 110, 100]); // Set to OTA
p.putAll((0xFF!6) ++ [0x10, 0x00] ++ [101, 110, 100]); // Set to mode: RAW
p.putAll((0xFF!6) ++ [0x04, 0x01] ++ [101, 110, 100]); // Set channel to first
p.putAll((0xFF!6) ++ [0x03, 0x00] ++ [101, 110, 100]); // Set all to ID 0

j = Jonisk.new(0, nil);
j.gui
j.testLed
j.setColor([255,0,0,0]);
j.off
// j.ota
Integer
p.putAll((0xFF!6) ++ [0x08, 0x00, 0x00] ++ [101, 110, 100]); // Request battery
1.do{(p.read.asAscii).post}
[98,116,101,
'.'.ascii
[116,101,115,116].asAscii
98.asAscii
// MSG: [98, 0, 160, 107, 6]

(w = Window.new;
w.layout = VLayout(
    [Button().states_([["Foo"]]), stretch:1, align:\bottomLeft],
    20,
	[EZSlider()],
    [nil, s:1]
);
w.front;
)

(
x.stop;
x = {
	inf.do{
		|i|
		var val = sin(i/100).abs * 255;
		// if(i % 512 > 255, {
			val = (i / 0.5) % 255;
		// val = 255 - val.asInteger;
	// }, {
		// val = (i / 0.5) % 255;
			val = val.asInteger;
// });
		val.postln;
		j.setColor([val, 0, 0, 0].rotate(0));
		(1/60).wait
	}
}.fork;
)